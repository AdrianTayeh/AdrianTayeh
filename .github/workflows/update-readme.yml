name: Update GitHub Stats Badges

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Run every day at midnight UTC

jobs:
  update-stats:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install axios

      - name: Update Gist with GitHub Stats
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_USERNAME: adriantayeh
          GIST_ID: YOUR_GIST_ID_HERE
        run: |
          node <<EOF
          const axios = require('axios');

          async function main() {
            const headers = {
              Authorization: 'token ' + process.env.GH_TOKEN,
              'User-Agent': 'GitHub Stats Updater',
              Accept: 'application/vnd.github.v3+json'
            };

            // Get public repo count
            const user = await axios.get(
              \`https://api.github.com/users/\${process.env.GITHUB_USERNAME}\`,
              { headers }
            );
            const totalRepos = user.data.public_repos;

            // Get total commits via events (approximate)
            const events = await axios.get(
              \`https://api.github.com/users/\${process.env.GITHUB_USERNAME}/events/public\`,
              { headers }
            );
            const pushEvents = events.data.filter(e => e.type === 'PushEvent');
            const recentCommits = pushEvents.reduce((sum, e) => sum + e.payload.commits.length, 0);

            const gistUpdate = {
              files: {
                "github-commits.json": {
                  content: JSON.stringify({
                    schemaVersion: 1,
                    label: "Total Commits",
                    message: String(recentCommits),
                    color: "blue"
                  }, null, 2)
                },
                "github-repos.json": {
                  content: JSON.stringify({
                    schemaVersion: 1,
                    label: "Public Repos",
                    message: String(totalRepos),
                    color: "green"
                  }, null, 2)
                }
              }
            };

            await axios.patch(\`https://api.github.com/gists/\${process.env.GIST_ID}\`, gistUpdate, { headers });
            console.log("✅ Gist updated!");
          }

          main().catch(err => {
            console.error("❌ Error updating Gist:", err);
            process.exit(1);
          });
          EOF
